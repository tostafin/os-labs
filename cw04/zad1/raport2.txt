Podsumowanie:
Po funkcji fork:
- ignorowany sygnal jest nadal ignorowany
- handler z procesu rodzica jest nadal zainstalowany w procesie dziecka
- maska jest rowniez dziedziczona
- sygnal zablokowany w procesie macierzystym jest niewidoczny jako oczekujacy w procesie potomnym

Po funkcji exec:
- ignorowany sygnal jest nadal ignorowany
- maska jest taka sama jak w procesie wywolujacym funkcje exec
- sygnal zablokowany jest widoczny jako oczekujacy po wywolaniu funkcji exec

Wnioski:
- wykonanie programu potwierdza teorie na temat zachowan poszczegolnych sygnalow
- uwidacznia sie tez roznica w zachowaniach pomiedzy funkcja fork a funkcjami z rodziny exec
- wiele funkcji uzytych w programach jest dosc uniwersalna i powtarza sie, w zwiazku z czym rozwazylem stworzenie biblioteki statycznej
